#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Mar 24 18:27:12 2022

@author: arielavshalom
"""
from queue import PriorityQueue

test_queue = PriorityQueue()

print(test_queue.empty())

test_queue.put(30)
test_queue.put(15)
test_queue.put(45)
test_queue.put(2)
test_queue.put(3)
test_queue.put(23)

print(test_queue.get())


graph = {
    '0' : set(['1','9']),
    '1' : set(['0','8']),
    '2' : set(['3']),
    '3' : set(['2','4','6','7']),
    '4' : set(['3']),
    '5' : set(['6','7']),
    '6' : set(['3', '5']),
    '7' : set(['3','5','8','10','11']),
    '8' : set(['1','7','9']),
    '9' : set(['0','8']),
    '10' : set(['7','11']),
    '11' : set(['7', '10']),
    '12' : set(['13']),
    '13' : set(['12']),
    '14' : set()
    }

def Dijkstra(graph, start_node, end_node):
    
    visited = {}
    
    p_queue = PriorityQueue()
    
    nodes_to_look_at = graph[start_node]
    for node in nodes_to_look_at:
        p_queue.put(node[1])
    
    
    while p_queue.empty() == False:
        current_node = p_queue.get()
        
        if current_node[0] in visited:
            if visited[current_node] > current_node[1]:
                visited[current_node] = current_node[1]
        
        else:
            visited[current_node[0]] = current_node
            
        Dijkstra(graph, current_node, end_node)
        
        return visited[end_node]
    
    
    
    
    
    return float('inf')
    

